{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Calibri;}{\f1\fnil\fcharset0 Courier New;}{\f2\fnil\fcharset0 Calibri;}}
{\colortbl ;\red0\green0\blue255;\red255\green0\blue0;}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\lang2057\b\f0\fs32 Using Git\fs22\par
\par
\par
\b0 Git bash is unreadable.\par
\b\par
\ul Simple usage\ulnone\par
\par
\pard{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\b0 Open command window\par
{\pntext\f0 2.\tab}Add Git/cmd to path\par
{\pntext\f0 3.\tab}Create a folder somewhere on D: drive\par
{\pntext\f0 4.\tab}CD to the folder\par
{\pntext\f0 5.\tab}Git init \endash  makes the folder a git repository (.git file in folder to keep track)\line\par
{\pntext\f0 6.\tab}Git status \endash  view status \endash  file comes up in red as not yet being tracked\par
{\pntext\f0 7.\tab}Git add <filename or pattern> such as *.txt \par
{\pntext\f0 8.\tab}Git add . \endash  adds all files\par
{\pntext\f0 9.\tab}Git status \endash  file now shows up in green\par
{\pntext\f0 10.\tab}Git log \endash  shows commit log\line\par
{\pntext\f0 11.\tab}Git branch - show branches \par
{\pntext\f0 12.\tab}Git branch myfeature - create a new branch called myfeature\par
{\pntext\f0 13.\tab}Git checkout \endash  point to a different branch or snapshot\line\par
{\pntext\f0 14.\tab}Git diff \endash  does a file diff\par
{\pntext\f0 15.\tab}Git tag - tags a version\par
{\pntext\f0 16.\tab}Git show - shows a version\par
\pard\b\par
\ul Showing git log entries one per line\ulnone\par
\par
git log --oneline\par
\b0\f1 8f1f395 Third commit\par
f8418b8 Second commit\par
af13d10 First commit\par
\b\f0\par
\b0 If you want date and author, do:\par
\par
\b git log --pretty=format:"%h%x09%an%x09%ad%x09%s"\par
\b0\f1 8f1f395 Steve King      Fri Feb 8 10:24:23 2019 +0000   Third commit\par
f8418b8 Steve King      Fri Feb 8 10:23:57 2019 +0000   Second commit\par
af13d10 Steve King      Fri Feb 8 10:22:55 2019 +0000   First commit\par
\b\f0\par
git log --pretty=format:"%h %ad %an %s" --date=iso\b0\par
\f1 8f1f395 2019-02-08 10:24:23 +0000 Steve King Third commit\par
f8418b8 2019-02-08 10:23:57 +0000 Steve King Second commit\par
af13d10 2019-02-08 10:22:55 +0000 Steve King First commit\par
\b\f0\par
\b0 If you want colour, use:\b\par
git log --pretty="%C(Green)%h %C(White)%ad %C(Cyan)%an %C(White)%s" --date=short\par
\par
\b0 To save this as the default option, do:\par
\b git config format.pretty "%C(Green)%h %C(White)%ad %C(Cyan)%an %C(White)%s"\par
\par
\b0 Or:\par
\b git config format.pretty "%C(bold yellow)%h %C(reset)%C(white)%ad %C(bold cyan)%an %C(reset)%C(white)%s"\par
\par
\b0 Then simply run git log with no parameters\par
\b\par
\par
\b0{\field{\*\fldinst{HYPERLINK "http://np2rvlapxx507/"}}{\fldrslt{\ul\cf1 http://np2rvlapxx507/}}}\b\f0\fs22\par
\par
\b0 d:\par
cd \\GitFolder\par
path=%path%;d:\\Programs\\Git\\cmd\par
git --version\par
git status\par
git config\par
git config user.name\par
git config user.email\par
git config core.pager cat\par
git config color.status.untracked \ldblquote red bold\rdblquote\par
git config color.status.changed \ldblquote red bold\rdblquote\par
git config color.status.added \ldblquote green bold\rdblquote\par
git config color.ui true/false\par
git config --unset color.wrongname\par
git log\par
git log --oneline\par
git log --oneline --before="2019-02-01"\par
git log --oneline --after="2019-02-01T12:00:00"\par
git diff 330f071..7287afe\par
\par
dir\par
echo Test 4 >> Test.txt\par
git add .\par
git status\par
git commit -m "Connection manager"\par
git log\par
git checkout 330f07\par
dir\par
git checkout master\par
git checkout -- Test.txt\par
git reset HEAD --hard\par
\b\par
\par
\b0 git clone\tab to create workspace folder\par
git status\tab to see status\par
git branch\tab to view branches\par
git checkout <branch> \tab to switch to a new branch, any uncommited code will be visible in the new branch.\par
\par
git config color.status.untracked "red bold"\par
\par
\'85 edit code\par
\b\par
\b0 git diff to see changes\par
git commit -am \ldblquote message\rdblquote  will commit all changes to the active branch\par
\b\par
D:\\GitWorkspace\\LEDR-Spike>git clone {\field{\*\fldinst{HYPERLINK "http://np2rvlapxx507/LEDR/ledr-spike.git"}}{\fldrslt{\ul\cf1 http://np2rvlapxx507/LEDR/ledr-spike.git}}}\f0\fs22\par
\b0 Cloning into 'ledr-spike'...\par
remote: Counting objects: 20531, done.\par
remote: Compressing objects: 100% (11416/11416), done.\par
Receiving objects: 100% (20531/20531), 1.42 GiB | 61.75 MiB/s, done.\par
remote: Total 20531 (delta 7802), reused 20126 (delta 7414)\par
Resolving deltas: 100% (7802/7802), done.\par
Checking out files: 100% (10500/10500), done.\par
\par
\b D:\\GitWorkspace\\LEDR-Spike\\ledr-spike>git checkout develop\par
\b0 Branch develop set up to track remote branch develop from origin.\par
Switched to a new branch 'develop'\par
\par
\b D:\\GitWorkspace\\LEDR-Spike\\ledr-spike>git status\par
\b0 On branch develop\par
Your branch is up-to-date with 'origin/develop'.\par
nothing to commit, working tree clean\par
\par
\b D:\\GitWorkspace\\LEDR-Spike>git diff\par
\b0 diff --git a/LEDR_Source/DB/build.xml b/LEDR_Source/DB/build.xml\par
index 65c130e..5f1d6af 100644\par
--- a/LEDR_Source/DB/build.xml\par
+++ b/LEDR_Source/DB/build.xml\par
@@ -1,3 +1,5 @@\par
+<!--This is branch SteveText-->\par
+<!--This is branch SteveTest-->\par
<!--This is branch SteveTest-->\par
\par
<project name="DB" basedir="." default="rebuild" >\par
\par
\par
\b D:\\GitWorkspace>git clone {\field{\*\fldinst{HYPERLINK "http://np2rvlapxx507/LEDR/ledr-spike.git"}}{\fldrslt{\ul\cf1 http://np2rvlapxx507/LEDR/ledr-spike.git}}}\f0\fs22\par
\b0 Cloning into 'ledr-spike'...\par
remote: Counting objects: 20531, done.\par
remote: Compressing objects: 100% (11416/11416), done.\par
\cf2 error: RPC failed; curl 18 transfer closed with outstanding read data remaining\par
fatal: The remote end hung up unexpectedly\par
fatal: early EOF\par
fatal: index-pack failed\par
\cf0\par
Pushing to remote repo also failed:\par
\par
Steps to recreate:\par
\par
\pard\fi-360\li720 1)\tab Create a \ldblquote remote\rdblquote  folder on D:\par
2)\tab Do a git init\par
3)\tab Add a file, do a git add and commit\par
4)\tab Do a git clone to a local repo in another folder \par
5)\tab In the local repo, make some changes, add and commit\par
6)\tab Pull from remote\par
7)\tab Push to remote \endash  here it fails with the error below\par
\pard\par
D:\\GitWorkspace\\LocalRepo>git push origin master\par
Counting objects: 6, done.\par
Delta compression using up to 4 threads.\par
Compressing objects: 100% (4/4), done.\par
Writing objects: 100% (6/6), 609 bytes | 0 bytes/s, done.\par
Total 6 (delta 0), reused 0 (delta 0)\par
\cf2 remote: error: refusing to update checked out branch: refs/heads/master\par
remote: error: By default, updating the current branch in a non-bare repository\par
remote: error: is denied, because it will make the index and work tree inconsistent\par
remote: error: with what you pushed, and will require 'git reset --hard' to match\par
remote: error: the work tree to HEAD.\par
remote: error:\par
remote: error: You can set 'receive.denyCurrentBranch' configuration variable to\par
remote: error: 'ignore' or 'warn' in the remote repository to allow pushing into\par
remote: error: its current branch; however, this is not recommended unless you\par
remote: error: arranged to update its work tree to match what you pushed in some\par
remote: error: other way.\par
remote: error:\par
remote: error: To squelch this message and still keep the default behaviour, set\par
remote: error: 'receive.denyCurrentBranch' configuration variable to 'refuse'.\par
To D:/GitWorkspace/LocalRepo/..\\MyRepo\par
! [remote rejected] master -> master (branch is currently checked out)\par
error: failed to push some refs to 'D:/GitWorkspace/LocalRepo/..\\MyRepo'\par
\par
\cf0\par
\ul\b Branches and new features\par
\ulnone\b0\par
cd ..\par
md Test1\par
cd Test1\par
git init\par
git config user.name "Steve King"\par
git config user.email "steve.king@ons.gov.uk"\par
echo %date% %time% > test.txt\par
git config color.status.untracked "red bold"\par
git config color.status.added "green bold"\par
git add .\par
git commit -m "First commit"\par
git log\par
echo Line 2 >> test.txt\par
git add .\par
git commit -m "Second commit"\par
echo Line 3 >> test.txt\par
type test.txt\par
git add .\par
git commit -m "Third commit"\par
git log\par
git branch newfeature\par
git branch\par
git checkout newfeature\par
git branch\par
echo line in newfeature branch >> test.txt\par
git add .\par
git commit -m "New line on newfeature"\par
git checkout master\par
dir\par
echo line in test2 > test2.txt\par
git add .\par
git commit -m "New line on master"\par
git log\par
dir\par
git checkout newfeature\par
dir\par
git log\par
echo another line in test >> test.txt\par
git branch\par
git status\par
git add .\par
git commit -m "Some more work on n/f"\par
git log --oneline\par
git checkout master\par
git log --oneline\par
git merge newfeature\par
git log\par
git branch -d newfeature\par
\par
\par
\par
\pard\sl276\slmult1\lang9\ul\b\f2 Github\par
\ulnone\b0\par
stevegovuk/steverepo - Public repo\par
To clone use:\par
{\field{\*\fldinst{HYPERLINK "https://github.com/stevegovuk/steverepo.git"}}{\fldrslt{\ul\cf1 https://github.com/stevegovuk/steverepo.git}}}\f2\fs22\par
\par
\cf2 Can't get this bit to work, no SSH on Windows!\par
\cf0\par
\b D:\\GitRemote>git clone {\field{\*\fldinst{HYPERLINK "https://github.com/stevegovuk/steverepo.git"}}{\fldrslt{\ul\cf1 https://github.com/stevegovuk/steverepo.git}}}\f2\fs22\par
\b0 Cloning into 'steverepo'...\par
fatal: unable to access '{\field{\*\fldinst{HYPERLINK "https://github.com/stevegovuk/steverepo.git/"}}{\fldrslt{\ul\cf1 https://github.com/stevegovuk/steverepo.git/}}}\f2\fs22 ': Couldn't resolve host 'github.com'\par
\par
Seems to be a DNS problem\b\par
\par
\par
D:\\GitRemote>git clone git@github.com/stevegovuk/steverepo.git\par
\b0 fatal: repository 'git@github.com/stevegovuk/steverepo.git' does not exist\par
\par
\b D:\\GitRemote>git clone git@github.com:stevegovuk/steverepo.git\par
\b0 Cloning into 'steverepo'...\par
ssh: Could not resolve hostname github.com: Temporary failure in name resolution\par
fatal: Could not read from remote repository.\par
\par
Please make sure you have the correct access rights\par
and the repository exists.\par
\par
\b D:\\GitRemote>git init --bare\par
\b0 Initialized empty Git repository in D:/GitRemote/\par
\par
\b D:\\GitRemote>git clone git@github.com:stevegovuk/steverepo.git\par
\b0 Cloning into 'steverepo'...\par
ssh: Could not resolve hostname github.com: Temporary failure in name resolution\par
fatal: Could not read from remote repository.\par
\par
Please make sure you have the correct access rights\par
and the repository exists.\par
\par
}
 